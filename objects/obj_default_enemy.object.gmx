<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_robot</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///init_vars
image_speed = .4
speed = 0;
direction = 0;
npc_dir = dir_select.none;
npc_speed = 2;
dir_alarm_len = 20;
alarm[0] = dir_alarm_len;
side_walk_sprite = spr_robot;
front_walk_sprite = spr_robot;
back_walk_sprite = spr_robot;
side_idle_sprite = spr_robot;
front_idle_sprite = spr_robot;
back_idle_sprite = spr_robot;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>npc_dir = get_random_dir();
alarm[0] = 20;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///move

//iterate through possible assigned npc_dir values (these are set in
//  alarm0), and move based on dir and collision

//CHECK LEFT
if (npc_dir == dir_select.left) {
    if place_meeting(x - (npc_speed * 2), y, obj_wall) {
        speed = 0;
    } else {
        speed = npc_speed;
    }
        
    direction = 180;
    sprite_index = side_walk_sprite;
    image_xscale = -1;

//CHECK RIGHT
} else if (npc_dir == dir_select.right) {
    if place_meeting(x + (npc_speed * 2), y, obj_wall) {
        speed = 0;
    } else {
        speed = npc_speed;
    }
    
    direction = 0;
    sprite_index = side_walk_sprite;
    image_xscale = 1;

//CHECK UP
} else if (npc_dir == dir_select.up) {
    if place_meeting(x, y - npc_speed, obj_wall) {
        speed = 0;
    } else {
        speed = npc_speed;
    }
    
    direction = 90;
    sprite_index = back_walk_sprite;
    image_xscale = 1;
    
//CHECK DOWN
} else if (npc_dir == dir_select.down) {
    if place_meeting(x, y + npc_speed, obj_wall) {
        speed = 0;
    } else {
        speed = npc_speed;
    }
    
    direction = 270;
    sprite_index = front_walk_sprite;
    image_xscale = 1;
    
//CHECK NONE
} else if (npc_dir == dir_select.none) {
    speed = 0;
    if (sprite_index == back_walk_sprite) sprite_index = back_idle_sprite;
    if (sprite_index == side_walk_sprite) sprite_index = side_idle_sprite;
    if (sprite_index == front_walk_sprite) sprite_index = front_idle_sprite;
} else {
    show_debug_message("Error: Couldn't find npc direction");
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///adjust_depth
depth = 10000 - y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
