<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>map_on = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if keyboard_check_pressed(ord("M")) {
    if (map_on == true) {
        map_on = false;
    } else {
        map_on = true;
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hud_x_offset = 6;
hud_y_offset = 6;
heart_spacing = 12
with global.player1_id {
    //draw heart containers
    var i;
    for (i = 0; i &lt; max_hp; i++) {
        xoff = (other.heart_spacing * i) + other.hud_x_offset;
        yoff = other.hud_y_offset;
        draw_sprite(spr_heart_container, 0, view_xview[0] + xoff, view_yview[0] + yoff);
        if (i &lt; current_hp) {
            draw_sprite(spr_heart, 0, view_xview[0] + xoff, view_yview[0] + yoff);
        }
    }   
}

map_xoff = 260;
map_yoff = 6;

if (map_on == true) {
var i;
    for (i = 0; i &lt; 10; i++) {
        var j;
        for (j = 0; j &lt; 10; j++) {
            if (global.overworld_ints[i, j] &gt;= 0) {
                if ((i == global.current_room_x) &amp;&amp; (j == global.current_room_y)){
                    draw_sprite(spr_hud_map_current, global.overworld_ints[i, j], i * 5 + map_xoff + view_xview[0], j * 5 + map_yoff + view_yview[0]);
                } else {
                    draw_sprite(spr_hud_map, global.overworld_ints[i, j], i * 5 + map_xoff + view_xview[0], j * 5 + map_yoff + view_yview[0]);
                }
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
